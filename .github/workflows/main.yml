name: Pipeline

on:
  push:
    branches:
      - master
      - feature/*

env:
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}

jobs:
  Pipeline:
    name: Default
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
        aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
        aws-region: '${{ secrets.AWS_DEFAULT_REGION }}'

    - name: Generate REPOSITORY_NAME
      run: echo "REPOSITORY_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d "/" -f2)" >> $GITHUB_ENV

    # - name: Run Snyk to check Static Application Security Testing
    #   run: |
    #     cd app/
    #     curl https://static.snyk.io/cli/latest/snyk-linux -o /usr/local/bin/snyk
    #     chmod +x /usr/local/bin/snyk
    #     snyk auth "${{ secrets.SNYK_TOKEN }}"
    #     snyk code test --org="${{ secrets.SNYK_ORG }}" --project-name="${{ env.REPOSITORY_NAME }}" --severity-threshold=medium

    # - name: Build Code
    #   run: ./.github/workflows/build.sh

    # - name: Jest
    #   run: ./.github/workflows/test.sh

    # - name: SonarCloud Scan
    #   uses: SonarSource/sonarcloud-github-action@master
    #   with:
    #     args: >
    #       -Dsonar.organization=team-devopsport
    #       -Dsonar.projectKey=${{ env.REPOSITORY_NAME }}
    #       -Dsonar.qualitygate.wait=true
    #       -Dsonar.javascript.lcov.reportPaths=./app/coverage/lcov.info
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # - name: Run Snyk to check Open-Source vulnerabilities
    #   run: |
    #     cd app/
    #     snyk monitor --project-name="${{ env.REPOSITORY_NAME }}"
    #     snyk test --org="${{ secrets.SNYK_ORG }}" --project-name=${{ env.REPOSITORY_NAME }} --severity-threshold=medium

    - name: Release
      run: ./.github/workflows/release.sh