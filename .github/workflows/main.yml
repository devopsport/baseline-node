name: Pipeline

on:
  push:
    branches:
      - master

jobs:
  Pipeline:
    name: Default
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: '${{ secrets.AWS_ACCESS_KEY_ID }}'
        aws-secret-access-key: '${{ secrets.AWS_SECRET_ACCESS_KEY }}'
        aws-region: '${{ secrets.AWS_DEFAULT_REGION }}'

    - name: Generate REPOSITORY_NAME
      run: echo "REPOSITORY_NAME=$(echo "${GITHUB_REPOSITORY}" | cut -d "/" -f2)" >> $GITHUB_ENV

    - name: Create ECR
      run: ./.github/workflows/install.sh
      env:
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: >
          -Dsonar.organization=team-devopsport
          -Dsonar.projectKey=${{ env.REPOSITORY_NAME }}
          -Dsonar.qualitygate.wait=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    - name: Run Snyk to check Static Application Security Testing
      run: |
        cd app/
        curl https://static.snyk.io/cli/latest/snyk-linux -o /usr/local/bin/snyk
        chmod +x /usr/local/bin/snyk
        snyk auth "${{ secrets.SNYK_TOKEN }}"
        snyk code test --org="${{ secrets.SNYK_ORG }}" --project-name="${{ env.REPOSITORY_NAME }}" --severity-threshold=medium

    - name: Build Code
      run: |
        DOCKER_UID=$(id -u)
        DOCKER_GID=$(id -g)
        DOCKER_USER=$(whoami)
        echo "${DOCKER_USER}:x:${DOCKER_UID}:${DOCKER_GID}::/app:/sbin/nologin" > passwd
        aws ecr get-login-password --region ${{ secrets.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin $(aws sts get-caller-identity --query Account --output text).dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com
        docker pull 509472714099.dkr.ecr.us-east-1.amazonaws.com/npm:v0.0.4
        docker run --rm -u ${DOCKER_UID}:${DOCKER_GID} -v ${PWD}/passwd:/etc/passwd:ro -v ${PWD}/app:/app 509472714099.dkr.ecr.us-east-1.amazonaws.com/npm:v0.0.4

    - name: Run Snyk to check Open-Source vulnerabilities
      run: |
        cd app/
        snyk monitor --project-name="${{ env.REPOSITORY_NAME }}"
        snyk test --org="${{ secrets.SNYK_ORG }}" --project-name=${{ env.REPOSITORY_NAME }} --severity-threshold=medium

    - name: Build Image
      run: |
        docker build -t $(aws sts get-caller-identity --query Account --output text).dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:$(cat CHANGELOG.md) .
        docker push $(aws sts get-caller-identity --query Account --output text).dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/${{ env.REPOSITORY_NAME }}:$(cat CHANGELOG.md)
